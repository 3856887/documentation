(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{430:function(a,t,s){"use strict";s.r(t);var e=s(48),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"创建-ssl-证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建-ssl-证书"}},[a._v("#")]),a._v(" 创建 SSL 证书")]),a._v(" "),s("p",[a._v("本页将为您介绍如何为面板和 Wings 创建新的 SSL 证书")]),a._v(" "),s("tabs",[s("tab",{attrs:{name:"方法1: Certbot"}},[s("p",[a._v("首先,我们将安装 Certbot,这是一个脚本文件,它可以自动更新证书并一键创建证书。下面的命令只适合 Ubuntu，但您可以在 "),s("a",{attrs:{href:"https://certbot.eff.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Certbot 官方网站"),s("OutboundLink")],1),a._v("查看相关安装说明,我们这里包含了安装 Certbot 必要的Nginx或Apache插件的指令,这样妈妈再也不用担心我需要迁移环境了!")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" update\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y certbot\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Nginx 插件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y python3-certbot-nginx\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Apache 插件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y python3-certbot-apache\n")])])]),s("h2",{attrs:{id:"创建证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建证书"}},[a._v("#")]),a._v(" 创建证书")]),a._v(" "),s("p",[a._v("安装Certbot之后我们需要生成一个证书,最简单的方法就是安装Web服务器的Certbot插件,如果没有Web服务器的话就需要DNS验证了")]),a._v(" "),s("p",[a._v("在下面命令中,请您替换 "),s("code",[a._v("example.com")]),a._v(" 域名为您自己需要生成证书的域名,当您需要申请多个域名的证书时可以在每个域名前面添加 "),s("code",[a._v("-d")]),a._v(" 参数 ，列如 "),s("code",[a._v("-d anotherdomain.com")]),a._v("，当然您还可以考虑生成通配符证书，但本教程未涉及。")]),a._v(" "),s("h3",{attrs:{id:"http-验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-验证"}},[a._v("#")]),a._v(" HTTP 验证")]),a._v(" "),s("p",[a._v("HTTP 验证需要您开放服务器 80 端口来进行验证")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Nginx")]),a._v("\ncertbot certonly --nginx -d example.com\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Apache")]),a._v("\ncertbot certonly --apache -d example.com\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果以上两者都不起作用您可以试试这个,但是用之前请确保Web服务器已经关闭")]),a._v("\ncertbot certonly --standalone -d example.com\n")])])]),s("h3",{attrs:{id:"dns-验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dns-验证"}},[a._v("#")]),a._v(" DNS 验证")]),a._v(" "),s("p",[a._v("DNS 验证要求您去您的域名购买商那里解析相应的TXT DNS记录值以验证域名所有权，而不必公开 80 端口。在运行下面的 certbot 命令时会显示说明。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("certbot -d example.com --manual --preferred-challenges dns certonly\n")])])]),s("h3",{attrs:{id:"自动续签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动续签"}},[a._v("#")]),a._v(" 自动续签")]),a._v(" "),s("p",[a._v("您可以配置证书自动续签以防止证书过期,您可以使用 "),s("code",[a._v("sudo crontab -e")]),a._v(" 打开 crontab 来添加下面的代码,该代码将在每天 23点 (晚上11点)都会检查一遍SSL证书是否过期并尝试续签")]),a._v(" "),s("p",[a._v("部署成功后将会自动重启 Nginx 并应用新的 SSL 证书,您可以将 "),s("code",[a._v("systemctl restart nginx")]),a._v(" 中的 "),s("code",[a._v("nginx")]),a._v(" 更改为 "),s("code",[a._v("apache")]),a._v(" 或 "),s("code",[a._v("wings")])]),a._v(" "),s("p",[a._v("对更高级的用户来说,我们建议使用 "),s("a",{attrs:{href:"https://acme.sh",target:"_blank",rel:"noopener noreferrer"}},[a._v("acme.sh"),s("OutboundLink")],1),a._v(" ，它提供了更多更强大的功能")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('0 23 * * * certbot renew --quiet --deploy-hook "systemctl restart nginx"\n')])])]),s("h3",{attrs:{id:"疑难解答"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#疑难解答"}},[a._v("#")]),a._v(" 疑难解答")]),a._v(" "),s("p",[a._v("如果您在尝试访问面板或 Wings 时遇到 "),s("code",[a._v("不安全连接")]),a._v(" 或 SSL/TLS 相关的错误时,有可能是您的 SSL 证书过期了,您可以通过更新 SSL 证书来解决,如果您的 80 端口正在被占用那就无法使用 "),s("code",[a._v("certbot-renew")]),a._v(" 来完成自动续签")]),a._v(" "),s("p",[a._v("如果您运行的是 Nginx,在运行 Certbot 并附带有 "),s("code",[a._v("-nginx")]),a._v(" 时出现报错您可以先停止 Nginx 服务后来续签证书，然后再启动 Nginx,如果您在为 Wings 续签证书，那你可以替换为 "),s("code",[a._v("wings")])]),a._v(" "),s("p",[a._v("停止 Nginx:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("systemctl stop nginx\n")])])]),s("p",[a._v("续签证书:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("certbot renew\n")])])]),s("p",[a._v("在完成续签后请使用下面的命令来重启 Nginx:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("systemctl start nginx\n")])])]),s("p",[a._v("您可能还需要重新启动 Wings，因为并非每个服务都能够自动应用更新的证书：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("systemctl restart wings\n")])])])]),a._v(" "),s("tab",{attrs:{name:"方法2: acme.sh (DNS服务商为 Cloudflare)"}},[s("p",[a._v("该方法适合高级用户和无法开放80端口的用户, 下面的命令适用于 Ubuntu 和 Cloudflare API,您可以查看 "),s("a",{attrs:{href:"https://github.com/Neilpang/acme.sh",target:"_blank",rel:"noopener noreferrer"}},[a._v("acme.sh 的官方网站"),s("OutboundLink")],1),a._v(" 来获取相关说明")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" https://get.acme.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v("\n")])])]),s("h3",{attrs:{id:"获取-cloudflare-api-密钥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取-cloudflare-api-密钥"}},[a._v("#")]),a._v(" 获取 Cloudflare API 密钥")]),a._v(" "),s("p",[a._v("在安装 acme 后我们需要获取 Cloudflare 的 API 密钥,请确保您的 DNS 记录指向您的节点(Cloudflare 的控制台中云朵应该是灰色的),然后找到 API 密钥,在全局 API 密钥的选项中点击查看您的 Cloudflare 密钥")]),a._v(" "),s("h3",{attrs:{id:"申请证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#申请证书"}},[a._v("#")]),a._v(" 申请证书")]),a._v(" "),s("p",[a._v("由于配置文件基于 Certbot,所以我们需要手动创建一个文件夹")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" /etc/letsencrypt/live/example.com\n")])])]),s("p",[a._v("安装 acme 之后执行它并获取 Cloudflare 的 API 密钥,然后输入 Cloudflare 的 API 凭据来生成证书")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CF_Key")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Your_CloudFlare_API_Key"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CF_Email")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Your_CloudFlare_Account@example.com"')]),a._v("\n\n")])])]),s("p",[a._v("然后创建证书")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("acme.sh --issue --dns dns_cf -d "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"example.com"')]),a._v(" --server letsencrypt "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--key-file /etc/letsencrypt/live/example.com/privkey.pem "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--fullchain-file /etc/letsencrypt/live/example.com/fullchain.pem\n")])])]),s("h3",{attrs:{id:"自动续签-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动续签-2"}},[a._v("#")]),a._v(" 自动续签")]),a._v(" "),s("p",[a._v("第一次运行脚本后,它将自动添加到 crontab,您可以使用以下命令来编辑自动续订间隔")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("crontab")]),a._v(" -e\n")])])])])],1)],1)}),[],!1,null,null,null);t.default=n.exports}}]);