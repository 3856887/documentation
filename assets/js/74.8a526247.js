(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{427:function(a,t,e){"use strict";e.r(t);var s=e(48),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"创建-ssl-证书"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建-ssl-证书"}},[a._v("#")]),a._v(" 创建 SSL 证书")]),a._v(" "),e("p",[a._v("本页将为您介绍如何为面板和 Wings 创建新的 SSL 证书")]),a._v(" "),e("tabs",[e("tab",{attrs:{name:"方法 1: Certbot"}},[e("p",[a._v("首先,我们将安装 Certbot,这是一个脚本文件,它可以自动更新证书并一键创建证书。下面的命令只适合 Ubuntu，但您可以在 "),e("a",{attrs:{href:"https://certbot.eff.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Certbot 官方网站"),e("OutboundLink")],1),a._v("查看相关安装说明,我们这里包含了安装 Certbot 必要的Nginx或Apache插件的指令,这样妈妈再也不用担心我需要迁移环境了!")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" update\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y certbot\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Nginx 插件")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y python3-certbot-nginx\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Apache 插件")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y python3-certbot-apache\n")])])]),e("h2",{attrs:{id:"创建证书"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建证书"}},[a._v("#")]),a._v(" 创建证书")]),a._v(" "),e("p",[a._v("安装Certbot之后我们需要生成一个证书,最简单的方法就是安装Web服务器的Certbot插件,如果没有Web服务器的话就需要DNS验证了")]),a._v(" "),e("p",[a._v("在下面命令中,请您替换 "),e("code",[a._v("example.com")]),a._v(" 域名为您自己需要生成证书的域名,当您需要申请多个域名的证书时可以在每个域名前面添加 "),e("code",[a._v("-d")]),a._v(" 参数 ，列如 "),e("code",[a._v("-d anotherdomain.com")]),a._v("，当然您还可以考虑生成通配符证书，但本教程未涉及。")]),a._v(" "),e("h3",{attrs:{id:"http-验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-验证"}},[a._v("#")]),a._v(" HTTP 验证")]),a._v(" "),e("p",[a._v("HTTP 验证需要您开放服务器 80 端口来进行验证")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Nginx")]),a._v("\ncertbot certonly --nginx -d example.com\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Apache")]),a._v("\ncertbot certonly --apache -d example.com\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果以上两者都不起作用您可以试试这个,但是用之前请确保Web服务器已经关闭")]),a._v("\ncertbot certonly --standalone -d example.com\n")])])]),e("h3",{attrs:{id:"dns-验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dns-验证"}},[a._v("#")]),a._v(" DNS 验证")]),a._v(" "),e("p",[a._v("DNS 验证要求您去您的域名购买商那里解析相应的TXT DNS记录值以验证域名所有权，而不必公开 80 端口。在运行下面的 certbot 命令时会显示说明。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("certbot -d example.com --manual --preferred-challenges dns certonly\n")])])]),e("h3",{attrs:{id:"自动续签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动续签"}},[a._v("#")]),a._v(" 自动续签")]),a._v(" "),e("p",[a._v("您可以配置证书自动续签以防止证书过期,您可以使用 "),e("code",[a._v("sudo crontab -e")]),a._v(" 打开 crontab 来添加下面的代码,该代码将在每天 23点 (晚上11点)都会检查一遍SSL证书是否过期并尝试续签")]),a._v(" "),e("p",[a._v("部署成功后将会自动重启 Nginx 并应用新的 SSL 证书,您可以将 "),e("code",[a._v("systemctl restart nginx")]),a._v(" 中的 "),e("code",[a._v("nginx")]),a._v(" 更改为 "),e("code",[a._v("apache")]),a._v(" 或 "),e("code",[a._v("wings")])]),a._v(" "),e("p",[a._v("对更高级的用户来说,我们建议使用 "),e("a",{attrs:{href:"https://acme.sh",target:"_blank",rel:"noopener noreferrer"}},[a._v("acme.sh"),e("OutboundLink")],1),a._v(" ，它提供了更多更强大的功能")]),a._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('0 23 * * * certbot renew --quiet --deploy-hook "systemctl restart nginx"\n')])])]),e("h3",{attrs:{id:"疑难解答"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#疑难解答"}},[a._v("#")]),a._v(" 疑难解答")]),a._v(" "),e("p",[a._v("如果您在尝试访问面板或 Wings 时遇到 "),e("code",[a._v("不安全连接")]),a._v(" 或 SSL/TLS 相关的错误时,有可能是您的 SSL 证书过期了,您可以通过更新 SSL 证书来解决,如果您的 80 端口正在被占用那就无法使用 "),e("code",[a._v("certbot-renew")]),a._v(" 来完成自动续签")]),a._v(" "),e("p",[a._v("如果您运行的是 Nginx,在运行 Certbot 并附带有 "),e("code",[a._v("-nginx")]),a._v(" 时出现报错您可以先停止 Nginx 服务后来续签证书，然后再启动 Nginx,如果您在为 Wings 续签证书，那你可以替换为 "),e("code",[a._v("wings")])]),a._v(" "),e("p",[a._v("停止 Nginx:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("systemctl stop nginx\n")])])]),e("p",[a._v("续签证书:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("certbot renew\n")])])]),e("p",[a._v("在完成续签后请使用下面的命令来重启 Nginx:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("systemctl start nginx\n")])])]),e("p",[a._v("您可能还需要重新启动 Wings，因为并非每个服务都能够自动应用更新的证书：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("systemctl restart wings\n")])])])]),a._v(" "),e("tab",{attrs:{name:"方法 2: acme.sh (使用 Cloudflare API)"}},[e("p",[a._v("该方法适合高级用户和无法开放80端口的用户, 下面的命令适用于 Ubuntu 和 Cloudflare API,您可以查看 "),e("a",{attrs:{href:"https://github.com/Neilpang/acme.sh",target:"_blank",rel:"noopener noreferrer"}},[a._v("acme.sh 的官方网站"),e("OutboundLink")],1),a._v(" 来获取相关说明")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" https://get.acme.sh "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v("\n")])])]),e("h3",{attrs:{id:"获取-cloudflare-api-密钥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取-cloudflare-api-密钥"}},[a._v("#")]),a._v(" 获取 Cloudflare API 密钥")]),a._v(" "),e("p",[a._v("安装 acme.sh 后，我们需要获取 CloudFlare API 密钥。 在 Cloudfare 的网站上，选择您的域名，然后在右侧复制您的 “区域 ID” 和 “帐户 ID”，然后单击 “获取您的 API 令牌”，单击 “创建令牌” > 选择模板 “编辑区域 DNS” > 选择 “区域资源” 的范围，然后单击 “继续以显示摘要”，复制您的令牌。")]),a._v(" "),e("h3",{attrs:{id:"申请证书"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#申请证书"}},[a._v("#")]),a._v(" 申请证书")]),a._v(" "),e("p",[a._v("由于配置文件基于 Certbot,所以我们需要手动创建一个文件夹")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p /etc/letsencrypt/live/example.com\n")])])]),e("p",[a._v("安装 acme 之后执行它并获取 Cloudflare 的 API 密钥,然后输入 Cloudflare 的 API 凭据来生成证书")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CF_Token")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Your_CloudFlare_API_Key"')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CF_Account_ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Your_CloudFlare_Account_ID"')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CF_Zone_ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Your_CloudFlare_Zone_ID"')]),a._v("\n\n")])])]),e("p",[a._v("然后创建证书")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("acme.sh --issue --dns dns_cf -d "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"example.com"')]),a._v(" --server letsencrypt "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--key-file /etc/letsencrypt/live/example.com/privkey.pem "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--fullchain-file /etc/letsencrypt/live/example.com/fullchain.pem\n")])])]),e("h3",{attrs:{id:"自动续签-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动续签-2"}},[a._v("#")]),a._v(" 自动续签")]),a._v(" "),e("p",[a._v("第一次运行脚本后,它将自动添加到 crontab,您可以使用以下命令来编辑自动续订间隔")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("crontab")]),a._v(" -e\n")])])])]),a._v(" "),e("tab",{attrs:{name:"方法 3: Caddy（使用 Cloudflare API）"}},[e("p",[a._v("这适用于高级用户，他们正在使用 Cloudflare 代理模式或无法访问端口 "),e("code",[a._v("80")]),a._v(".")]),a._v(" "),e("h3",{attrs:{id:"使用-cloudflare-dns-插件安装-caddy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-cloudflare-dns-插件安装-caddy"}},[a._v("#")]),a._v(" 使用 Cloudflare DNS 插件安装 Caddy")]),a._v(" "),e("p",[a._v("Caddy 默认不带有 Cloudflare DNS 插件，您需要自行安装。")]),a._v(" "),e("p",[a._v("有两种主要方法:")]),a._v(" "),e("ol",[e("li",[a._v("使用 "),e("code",[a._v("xcaddy")]),a._v(" - 用于构建自己的 Caddy 版本的 CLI 工具")]),a._v(" "),e("li",[a._v("从 "),e("a",{attrs:{href:"https://caddyserver.com/download",target:"_blank",rel:"noopener noreferrer"}},[a._v("Caddy 的下载页面"),e("OutboundLink")],1),a._v("下载预构建的二进制文件。")]),a._v(" "),e("li",[a._v("使用 Ansible 下载并安装带有插件的 Caddy。请参阅 "),e("a",{attrs:{href:"https://github.com/caddy-ansible/caddy-ansible",target:"_blank",rel:"noopener noreferrer"}},[a._v("caddy-ansible"),e("OutboundLink")],1)])]),a._v(" "),e("h4",{attrs:{id:"在您的服务器上使用-xcaddy-构建-caddy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在您的服务器上使用-xcaddy-构建-caddy"}},[a._v("#")]),a._v(" 在您的服务器上使用 "),e("code",[a._v("xcaddy")]),a._v(" 构建 Caddy")]),a._v(" "),e("p",[a._v("请参阅 "),e("a",{attrs:{href:"https://caddyserver.com/docs/build#xcaddy",target:"_blank",rel:"noopener noreferrer"}},[a._v("Caddy 构建文档"),e("OutboundLink")],1),a._v("。")]),a._v(" "),e("h3",{attrs:{id:"获取-cloudflare-api-令牌"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取-cloudflare-api-令牌"}},[a._v("#")]),a._v(" 获取 CloudFlare API 令牌")]),a._v(" "),e("p",[a._v("在安装 acme.sh 后，我们需要获取 CloudFlare API 密钥。请确保 DNS 记录（A 记录或 CNAME 记录）指向您的目标节点，并将云设置为灰色（绕过 CloudFlare 代理）。然后转到“我的配置文件”>“API 密钥”，在全局 API 密钥子选项卡上，单击“查看”，输入您的 CloudFlare 密码，并将 API 密钥复制到剪贴板。")]),a._v(" "),e("p",[a._v("在安装带有 Cloudflare DNS 插件的 Caddy 后，我们需要获取 Cloudflare API 令牌。请确保 DNS 记录（A 记录或 CNAME 记录）指向您的目标节点。然后转到“我的配置文件”>“API 令牌”，在 API 令牌上单击“创建令牌”。创建 API 令牌 > API 令牌模板，在带有“编辑区域 DNS”的行末尾，单击“使用模板”。在"),e("strong",[a._v("区域资源")]),a._v("下，选择您希望创建 API 令牌的 DNS 区域，单击“继续到摘要”。查看 API 令牌摘要，然后单击“创建令牌”。最后将 API 令牌复制到剪贴板。")]),a._v(" "),e("h3",{attrs:{id:"重新配置-caddy-以使用-cloudflare-dns-获取证书"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重新配置-caddy-以使用-cloudflare-dns-获取证书"}},[a._v("#")]),a._v(" 重新配置 Caddy 以使用 Cloudflare DNS 获取证书")]),a._v(" "),e("p",[a._v("首先，您需要创建一个环境变量文件（例如 "),e("code",[a._v(".env")]),a._v("），请注意，此文件包含机密信息，不应该被公开访问。")]),a._v(" "),e("p",[a._v("我们建议您将此机密文件放在以下位置: "),e("code",[a._v("/etc/caddy/.secrets.env")]),a._v("。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CLOUDFLARE_API_TOKEN")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("您的 Cloudflare API 令牌"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("p",[a._v("出于安全原因，我们建议将权限设置为 "),e("code",[a._v("0600")]),a._v(" （只有所有者可以读取或写入文件）。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将 `.secrets.env` 文件的所有权设置为 `caddy` 系统用户")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("chown")]),a._v(" caddy:caddy /etc/caddy/.secrets.env\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 仅允许所有者读写权限 - 即 `caddy` 系统用户")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" 0600 /etc/caddy/.secrets.env\n")])])]),e("p",[a._v("接下来，修改 systemd 单元文件，以从文件加载环境变量（在 "),e("code",[a._v("ExecStart")]),a._v(" 中添加 "),e("code",[a._v("--envfile /etc/caddy/.secrets.env")]),a._v(" 标志）。默认的 systemd 单元文件位置是 "),e("code",[a._v("/etc/systemd/system/caddy.service")]),a._v(":")]),a._v(" "),e("div",{staticClass:"language-unit extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[a._v(" ")]),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("[Unit]\nDescription=Caddy\nDocumentation=https://caddyserver.com/docs/\nAfter=network.target network-online.target\nRequires=network-online.target\n\n[Service]\nType=notify\nUser=caddy\nGroup=caddy\nExecStart=/usr/bin/caddy run --environ --envfile /etc/caddy/.secrets.env --config /etc/caddy/Caddyfile\nExecReload=/usr/bin/caddy reload --config /etc/caddy/Caddyfile\nTimeoutStopSec=5s\nLimitNOFILE=1048576\nLimitNPROC=512\nPrivateTmp=true\nProtectSystem=full\nAmbientCapabilities=CAP_NET_BIND_SERVICE\n\n[Install]\nWantedBy=multi-user.target\n")])])]),e("p",[a._v("最后，在您的面板配置的 "),e("code",[a._v("<domain>")]),a._v(" 块下，您可以在 "),e("code",[a._v("Caddyfile")]),a._v(" 中添加一个 "),e("code",[a._v("tls")]),a._v(" 块。Caddy 配置文件的位置是 "),e("code",[a._v("/etc/caddy/Caddyfile")]),a._v(":")]),a._v(" "),e("div",{staticClass:"language-caddyfile extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[a._v(" ")]),e("div",{staticClass:"highlighted"},[a._v(" ")]),e("div",{staticClass:"highlighted"},[a._v(" ")]),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("<domain> {\n  # ...\n\n  tls {\n    dns cloudflare {env.CLOUDFLARE_API_TOKEN}\n  }\n}\n")])])])])],1)],1)}),[],!1,null,null,null);t.default=r.exports}}]);