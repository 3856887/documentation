(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{340:function(s,t,a){s.exports=a.p+"assets/img/wings_configuration_example.9f3fdd0b.png"},432:function(s,t,a){"use strict";a.r(t);var n=a(48),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"迁移至-wings"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#迁移至-wings"}},[s._v("#")]),s._v(" 迁移至 Wings")]),s._v(" "),n("p",[s._v("本指南适用于希望从旧的 Node.JS 守护程序迁移到 Wings 的人。如果您是第一次尝试在新节点上安装 Wings，请参阅 "),n("RouterLink",{attrs:{to:"/wings/1.0/installing.html"}},[s._v("安装指南")]),s._v(" 。")],1),s._v(" "),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[s._v("面板版本要求")]),s._v(" "),n("p",[s._v("您"),n("strong",[s._v("必须")]),s._v("运行翼龙面板 1.X 及以上版本才能使用 Wings。")])]),s._v(" "),n("p",[s._v("执行此过程时，您将有一段短暂的离线时间，但不会影响正在运行的游戏进程。此外，在此期间，您的面板可能会离线（或处于维护模式），因此您的用户不会触发任何异常情况。")]),s._v(" "),n("h2",{attrs:{id:"安装-wings"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装-wings"}},[s._v("#")]),s._v(" 安装 Wings")]),s._v(" "),n("p",[s._v("安装守护程序的第一步是确保我们具有所需的目录结构设置。为此，请运行以下命令，该命令将创建基本目录并下载 Wings 可执行文件。")]),s._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /etc/pterodactyl\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L -o /usr/local/bin/wings https://github.com/pterodactyl-china/wings/releases/latest/download/wings_linux_amd64\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" u+x /usr/local/bin/wings\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 若阁下在上条指令上无法正常拉取压缩包或者拉取缓慢 可使用 Fastgit 提供的国内反向代理来拉取")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L -o /usr/local/bin/wings "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://hub.fastgit.xyz/pterodactyl-china/wings/releases/latest/download/wings_linux_$([[ "'),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"x86_64"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"amd64"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"arm64"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v('"\n')])])]),n("h2",{attrs:{id:"复制新的配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#复制新的配置文件"}},[s._v("#")]),s._v(" 复制新的配置文件")]),s._v(" "),n("p",[s._v("安装 Wings 后，您需要从面板中复制一个新的配置文件。此文件采用新格式，将来应该更易于管理和编辑。")]),s._v(" "),n("p",[s._v("只需复制代码块的内容并将其粘贴到 "),n("code",[s._v("/etc/pterodactyl")]),s._v(" 目录中的 "),n("code",[s._v("config.yml")]),s._v(" 文件里。")]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),n("p",[s._v("当然，你也可以直接点击 [生成自动部署指令] 来生成一件命令覆盖，而不需要您手动覆盖。(请注意，此覆盖只会覆盖默认的 "),n("code",[s._v("/etc/pterodactyl")]),s._v(" 目录下的配置文件)")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(340),alt:""}})]),s._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[s._v("警告")]),s._v(" "),n("p",[s._v("请注意，你以前对配置所做的任何修改都会随之丢失。如果你对我们的默认设置有修改，最好的选择是使用面板生成的配置启动一次 Wings，然后再此基础上写入额外的配置设置。")]),s._v(" "),n("p",[s._v("从那里您可以根据需要进行任何调整。")])]),s._v(" "),n("h2",{attrs:{id:"移除旧的守护进程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#移除旧的守护进程"}},[s._v("#")]),s._v(" 移除旧的守护进程")]),s._v(" "),n("p",[s._v("现在安装了 Wings，我们需要从服务器中删除所有旧的守护程序代码，因为它不再被使用。为此，只需执行以下命令 - 假设您的旧守护程序路径默认于 "),n("code",[s._v("/srv/daemon")]),s._v(" 目录中。")]),s._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止旧的守护程序")]),s._v("\nsystemctl stop wings\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除整个目录。这里没有任何我们在这次迁移中实际需要的东西。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 请记住，服务器数据默认存储在 /srv/daemon-data 中，如果你没做修改。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf /srv/daemon\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果没有对 NodeJS 有其他用途，您可以选择从你的系统中删除它。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" -y remove nodejs "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或: yum remove nodejs")]),s._v("\n")])])]),n("h3",{attrs:{id:"删除独立-sftp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除独立-sftp"}},[s._v("#")]),s._v(" 删除独立 SFTP")]),s._v(" "),n("p",[s._v("如果您使用带有旧守护程序的 "),n("RouterLink",{attrs:{to:"/daemon/0.6/standalone_sftp.html"}},[s._v("独立SFTP服务器")]),s._v(" ，我们不再需要它的 systemd 服务,所以我们需要删除它。\n您可以使用以下命令执行此操作。")],1),s._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止并禁用独立 sftp")]),s._v("\nsystemctl disable --now pterosftp\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除 systemd 服务")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" /etc/systemd/system/pterosftp.service\n")])])]),n("h2",{attrs:{id:"wings-守护进程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#wings-守护进程"}},[s._v("#")]),s._v(" Wings 守护进程")]),s._v(" "),n("p",[s._v("然后，您需要编辑现有 "),n("code",[s._v("systemd")]),s._v(" 的 Wings 服务文件以指向新的控制软件。为此，请打开 "),n("code",[s._v("/etc/systemd/system/wings.service")]),s._v(" 文件并将其中的全部内容替换为以下内容：")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("[Unit]\nDescription=Pterodactyl Wings Daemon\nAfter=docker.service\n\n[Service]\nUser=root\nWorkingDirectory=/etc/pterodactyl\nLimitNOFILE=4096\nPIDFile=/var/run/wings/daemon.pid\nExecStart=/usr/local/bin/wings\nRestart=on-failure\nStartLimitInterval=600\n\n[Install]\nWantedBy=multi-user.target\n")])])]),n("p",[s._v("然后，启动 Wings。")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("systemctl daemon-reload\nsystemctl enable --now wings\n")])])]),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[s._v("如果 Wings 没有启动怎么办？")]),s._v(" "),n("p",[s._v("如果此时您在启动 Wings 时遇到问题，请运行以下命令直接启动 Wings 并检查是否有任何特定的错误输出。")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("sudo wings --debug\n")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);